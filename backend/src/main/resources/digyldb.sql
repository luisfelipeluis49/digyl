USE MASTER
GO

DROP DATABASE IF EXISTS DIGYL
GO

CREATE DATABASE DIGYL
GO

USE DIGYL
GO

CREATE TABLE [TB_LANGUAGE] (
	[ID_LANGUAGE] SMALLINT IDENTITY PRIMARY KEY,
	[LANGUAGE_NAME] VARCHAR(32) NOT NULL
);
GO

CREATE TABLE [TB_GENDER] (	
	[ID_GENDER] INT IDENTITY PRIMARY KEY,
	[GENDER_NAME] VARCHAR(32) NOT NULL
);
GO

CREATE TABLE [TB_RYTHM] (
	[ID_RYTHM] INT IDENTITY PRIMARY KEY,
	[RYTHM_TYPE] VARCHAR(32) NOT NULL
);
GO

CREATE TABLE [TB_LYRIC] (
	[ID_LYRIC] INT IDENTITY PRIMARY KEY,
	[LYRIC_TYPE] VARCHAR(32) NOT NULL
);
GO

CREATE TABLE [TB_ARTIST] (
	[ID_ARTIST] INT IDENTITY PRIMARY KEY,
	[ARTIST_NAME] VARCHAR(64) NOT NULL
);
GO

CREATE TABLE [TB_ALBUM] (
	[ID_ALBUM] INT IDENTITY PRIMARY KEY,
	[ALBUM_TITLE] VARCHAR(64) NOT NULL,
	[ALBUM_TRACKS] TINYINT NOT NULL,
	[ALBUM_DURATION] TIME NOT NULL,
	[ALBUM_RELEASE] DATE NOT NULL
);
GO

CREATE TABLE [TB_SONG] (
	[ID_SONG] INT IDENTITY PRIMARY KEY,
	[SONG_NAME] VARCHAR(64) NOT NULL,
	[TRACK_POSITION] TINYINT NOT NULL,
	[SONG_ALBUM] INT NOT NULL,
	CONSTRAINT [SONG_ALBUM_FK]
		FOREIGN KEY ([SONG_ALBUM])
		REFERENCES [TB_ALBUM](ID_ALBUM)
);
GO

CREATE TABLE [TB_USER] (
	[ID_USER] INT IDENTITY PRIMARY KEY,
	[USER_NICKNAME] VARCHAR(16) NOT NULL,
	[USER_BIRTH_DATE] DATE NOT NULL,
	[USER_NATIONALITY] CHAR(3) NOT NULL,
	[USER_COUNTRY] CHAR(3) NOT NULL
);
GO

CREATE TABLE [TB_ALBUM_LANGUAGE] (
	[ID_ALBUM_LANGUAGE] INT IDENTITY PRIMARY KEY,
	[ALBUM] INT NOT NULL,
	CONSTRAINT [ALBUM_LANGUAGE_FK]
		FOREIGN KEY ([ALBUM])
		REFERENCES [TB_ALBUM](ID_ALBUM),
	[LANGUAGE] SMALLINT NOT NULL,
	CONSTRAINT [LANGUAGE_FK]
		FOREIGN KEY ([LANGUAGE])
		REFERENCES [TB_LANGUAGE](ID_LANGUAGE)
);
GO

CREATE TABLE [TB_ALBUM_GENDER] (
	[ID_ALBUM_GENDER] INT IDENTITY PRIMARY KEY,
	[ALBUM] INT NOT NULL,
	CONSTRAINT [ALBUM_GENDER_FK]
		FOREIGN KEY ([ALBUM])
		REFERENCES [TB_ALBUM](ID_ALBUM),
	[GENDER] INT NOT NULL,
	CONSTRAINT [GENDER_FK]
		FOREIGN KEY ([GENDER])
		REFERENCES [TB_GENDER](ID_GENDER)
);
GO

CREATE TABLE [TB_ALBUM_RYTHM] (
	[ID_ALBUM_RYTHM] INT IDENTITY PRIMARY KEY,
	[ALBUM] INT NOT NULL,
	CONSTRAINT [ALBUM_RYTHM_FK]
		FOREIGN KEY ([ALBUM])
		REFERENCES [TB_ALBUM](ID_ALBUM),
	[RYTHM] INT NOT NULL,
	CONSTRAINT [RYTHM_FK]
		FOREIGN KEY ([RYTHM])
		REFERENCES [TB_RYTHM](ID_RYTHM)
);
GO

CREATE TABLE [TB_ALBUM_LYRIC] (
	[ID_ALBUM_LYRIC] INT IDENTITY PRIMARY KEY,
	[ALBUM] INT NOT NULL,
	CONSTRAINT [ALBUM_LYRIC_FK]
		FOREIGN KEY ([ALBUM])
		REFERENCES [TB_ALBUM](ID_ALBUM),
	[LYRIC] INT NOT NULL,
	CONSTRAINT [LYRIC_FK]
		FOREIGN KEY ([LYRIC])
		REFERENCES [TB_LYRIC](ID_LYRIC)
);
GO

CREATE TABLE [TB_ALBUM_ARTIST] (
	[ID_ALBUM_ARTIST] INT IDENTITY PRIMARY KEY,
	[ALBUM] INT NOT NULL,
	CONSTRAINT [ALBUM_ARTIST_FK]
		FOREIGN KEY ([ALBUM])
		REFERENCES [TB_ALBUM](ID_ALBUM),
	[ARTIST] INT NOT NULL,
	CONSTRAINT [ARTIST_FK]
		FOREIGN KEY ([ARTIST])
		REFERENCES [TB_ARTIST](ID_ARTIST)
);
GO

CREATE TABLE [TB_USER_ALBUM] (
	[ID_USER_ALBUM] INT IDENTITY PRIMARY KEY,
	[USER] INT NOT NULL,
	CONSTRAINT [USER_FK]
		FOREIGN KEY ([USER])
		REFERENCES [TB_USER](ID_USER),
	[ALBUM] INT NOT NULL,
	CONSTRAINT [ALBUM_USER_FK]
		FOREIGN KEY ([ALBUM])
		REFERENCES [TB_ALBUM](ID_ALBUM)
);
GO
